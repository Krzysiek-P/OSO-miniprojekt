name: DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  packages: write

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install dependencies
        run: |
          cd juice-shop && npm install --no-audit --no-fund --legacy-peer-deps
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'Juice-Shop'
          path: "./juice-shop/"
          format: "SARIF,HTML"
          fail_on_severity: "NONE"  # Wyłącz failowanie na podatnościach
      - name: Upload Dependency-Check results
        uses: github/codeql-action/upload-sarif@v3
        if: always()  # Zawsze przesyła wyniki, nawet przy błędach
        with:
          sarif_file: ./dependency-check-report.sarif

  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          severity-level: "high"
          sarif-output: "gitleaks-results.sarif"
          exit-code: "0"  # Wyłącz failowanie
      - name: Upload Gitleaks results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ./gitleaks-results.sarif

  semgrep:
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep
    steps:
      - uses: actions/checkout@v4
      - name: Run Semgrep
        run: |
          semgrep scan --config=p/owasp-juice-shop --sarif --output=semgrep-results.sarif
          exit 0  # Wyłącz failowanie
      - name: Upload Semgrep results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ./semgrep-results.sarif

  build-and-scan:
    needs: [dependency-check, gitleaks, semgrep]
    if: always()  # Wykonuj nawet jeśli poprzednie joby failują
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./juice-shop
          file: ./juice-shop/Dockerfile
          tags: local-scan:latest
          load: true
      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "local-scan:latest"
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
          exit-code: "0"  # Wyłącz failowanie
      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ./trivy-results.sarif
      - name: Push to Docker Hub (opcjonalne)
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: yourusername/juice-shop:latest
          secrets: ${{ secrets.DOCKER_HUB_TOKEN }}

  dast-scan:
    needs: build-and-scan
    if: always()  # Wykonuj nawet jeśli build-and-scan failuje
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Start Juice Shop container
        run: |
          docker run -d --name juice-shop -p 3000:3000 local-scan:latest
          sleep 10
      - name: Run OWASP ZAP scan
        uses: zaproxy/action-baseline@v0.1.0
        with:
          target: "http://localhost:3000"
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_image: "ghcr.io/zaproxy/zaproxy:stable"
          cmd_options: "--exit-code Never"  # Wyłącz failowanie
      - name: Stop Juice Shop container
        if: always()
        run: docker stop juice-shop
